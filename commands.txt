
These are the script commands that ar available at the interactive
processing window. These are TCL commands, so basic understanding of
Tcl scripting is assumed.

* axes <name>

Return an ordered list of dimensions for the axes of the named
item. For example, a 640x480 grayscale image has the axes dimensions
"640 480". This uses the FITS definition of image axes, so
multi-spectral images put color information in another axis. So an RGB
color image would have axes dimensions "640 480 3".

* bayer_decompose <dst-red> <dst-green> <dst-blue> <src>

Decompose a grayscale image captured by a bayer filtered sensor into
red, green and blue planes. All the planes have the resolution of the
original, but only some of the pixel values are valid. For each plane
where a pixel value is not valid, mark that pixel blank by setting its
alpha mask to zero.

One way to get a source image that has the properties that this
function expects is with the dcraw command, like so:

   dcraw -v -T -D -4 -o 0 -W -r 1.0 1.0 1.0 1.0 foo.NEF

This will produce a file "foo.tiff" that is a 16bit TIFF file. Load that
and use it as a source for the bayer_decompose function.

* bench names

Get a list of the bench tree items that have script names.

* bench display_text <name>

Get the display string for the named item.

* copy <work/dst> <src>

Copy the source data array to the named item in the work folder. The
source array can be any data array, the destination is of the form
<folder>/<name>, where <folder> is the script-name for a Work Folder
and the <name> is the name of a page within the folder.

* crop <dst> <axes-list> <src> <start-point>

Crop an array from the source. The destination can have fewer
dimensions then the source array, but must fit entirely within the
source array. Also, the <start-point> dimensions must match the
dimensions of the <src> image.

* scratch new <name> <display-name> <type> <axes-list>

Create a new scratch image with the script name <name>. Use
<display-name> as the name to display, and create an image with the
<axes-list> dimensions.

* minmax <src>

Scan an image to find the minimum and maximum pixel values. The result
is a list of 4 items: The minimum value, the address of the minimum,
the maximum value, and its address.

* phase_correlate <dest> <src1> <src2>

Do a phase correlation of the <src1> and <src2> images, and put the
resulting image into <dest>. The <src1> and <src2> images must have
the same type and dimensions. The <dest> image will have the same
dimensions but a type of native double.

* pixbin <dst> <src> <bin-list>

Bin pixels from the source image into a reduced destination image. The
<bin-list> is a list of bin amounts in each dimension. This function
accounts for blank pixels by not adding them into the result. The
destination image is scaled by the number of input values per bin, so
that the destination pixels have the same range as the source pixels.
